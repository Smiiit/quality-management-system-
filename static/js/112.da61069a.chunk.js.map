{"version":3,"file":"static/js/112.da61069a.chunk.js","mappings":"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","sources":["pages/auth/jwt/login.js","components/hook-form/rhf-text-field.js","components/hook-form/form-provider.js","sections/auth/jwt/jwt-login-view.js","sections/auth/jwt/jwt-register-view.js"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n// sections\nimport { JwtLoginView } from 'src/sections/auth/jwt';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Helmet>\n        <title> QMS Login</title>\n      </Helmet>\n\n      <JwtLoginView />\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport TextField from '@mui/material/TextField';\n\n// ----------------------------------------------------------------------\n\nexport default function RHFTextField({ name, helperText, type, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          type={type}\n          value={type === 'number' && field.value === 0 ? '' : field.value}\n          onChange={(event) => {\n            if (type === 'number') {\n              field.onChange(Number(event.target.value));\n            } else {\n              field.onChange(event.target.value);\n            }\n          }}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n\nRHFTextField.propTypes = {\n  helperText: PropTypes.object,\n  name: PropTypes.string,\n  type: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { RouterLink } from 'src/routes/components';\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\n// config\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// auth\nimport { useAuthContext } from 'src/auth/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function JwtLoginView() {\n  const { login } = useAuthContext();\n\n  const router = useRouter();\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const searchParams = useSearchParams();\n\n  const returnTo = searchParams.get('returnTo');\n\n  const password = useBoolean();\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n    password: Yup.string().required('Password is required'),\n  });\n\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    \n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await login?.(data.email, data.password);\n\n      router.push(returnTo || PATH_AFTER_LOGIN);\n    } catch (error) {\n      console.error(error);\n      reset();\n      setErrorMsg(typeof error === 'string' ? error : error.message);\n    }\n  });\n\n  const renderHead = (\n    <Stack spacing={2} sx={{ mb: 5 }}>\n      <Typography variant=\"h4\">Sign in to Quality Management</Typography>\n\n      <Stack direction=\"row\" spacing={0.5}>\n        <Typography variant=\"body2\">New user?</Typography>\n\n        <Link component={RouterLink} href={paths.auth.jwt.register} variant=\"subtitle2\">\n          Create an account\n        </Link>\n      </Stack>\n    </Stack>\n  );\n\n  const renderForm = (\n    <Stack spacing={2.5}>\n      {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\n\n      <RHFTextField name=\"email\" label=\"Email Address\" />\n\n      <RHFTextField\n        name=\"password\"\n        label=\"Password\"\n        type={password.value ? 'text' : 'password'}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={password.onToggle} edge=\"end\">\n                <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Link variant=\"body2\" color=\"inherit\" underline=\"always\" sx={{ alignSelf: 'flex-end' }}>\n        Forgot password?\n      </Link>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isSubmitting}\n      >\n        Login\n      </LoadingButton>\n    </Stack>\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={onSubmit}>\n      {renderHead}\n\n      \n\n      {renderForm}\n    </FormProvider>\n  );\n}\n","import * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Link from '@mui/material/Link';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\n// hooks\nimport { useBoolean } from 'src/hooks/use-boolean';\n// routes\nimport { paths } from 'src/routes/paths';\nimport { RouterLink } from 'src/routes/components';\nimport { useSearchParams, useRouter } from 'src/routes/hooks';\n// config\nimport { PATH_AFTER_LOGIN } from 'src/config-global';\n// auth\nimport { useAuthContext } from 'src/auth/hooks';\n// components\nimport Iconify from 'src/components/iconify';\nimport FormProvider, { RHFTextField } from 'src/components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function JwtRegisterView() {\n  const { register } = useAuthContext();\n\n  const router = useRouter();\n\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const searchParams = useSearchParams();\n\n  const returnTo = searchParams.get('returnTo');\n\n  const password = useBoolean();\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().required('First name required'),\n    lastName: Yup.string().required('Last name required'),\n    email: Yup.string().required('Email is required').email('Email must be a valid email address'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const defaultValues = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(RegisterSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = handleSubmit(async (data) => {\n    try {\n      await register?.(data.email, data.password, data.firstName, data.lastName);\n\n      router.push(returnTo || PATH_AFTER_LOGIN);\n    } catch (error) {\n      console.error(error);\n      reset();\n      setErrorMsg(typeof error === 'string' ? error : error.message);\n    }\n  });\n\n  const renderHead = (\n    <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n      <Typography variant=\"h4\">Registration</Typography>\n\n      <Stack direction=\"row\" spacing={0.5}>\n        <Typography variant=\"body2\"> Already have an account? </Typography>\n\n        <Link href={paths.auth.jwt.login} component={RouterLink} variant=\"subtitle2\">\n          Sign in\n        </Link>\n      </Stack>\n    </Stack>\n  );\n\n  const renderTerms = (\n    <Typography\n      component=\"div\"\n      sx={{\n        color: 'text.secondary',\n        mt: 2.5,\n        typography: 'caption',\n        textAlign: 'center',\n      }}\n    >\n      {'By signing up, I agree to '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Terms of Service\n      </Link>\n      {' and '}\n      <Link underline=\"always\" color=\"text.primary\">\n        Privacy Policy\n      </Link>\n      .\n    </Typography>\n  );\n\n  const renderForm = (\n    <FormProvider methods={methods} onSubmit={onSubmit}>\n      <Stack spacing={2.5}>\n        {!!errorMsg && <Alert severity=\"error\">{errorMsg}</Alert>}\n\n        <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n          <RHFTextField name=\"firstName\" label=\"First name\" />\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\n        </Stack>\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={password.value ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={password.onToggle} edge=\"end\">\n                  <Iconify icon={password.value ? 'solar:eye-bold' : 'solar:eye-closed-bold'} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <LoadingButton\n          fullWidth\n          color=\"inherit\"\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Create account\n        </LoadingButton>\n      </Stack>\n    </FormProvider>\n  );\n\n  return (\n    <>\n      {renderHead}\n\n      {renderForm}\n\n      {renderTerms}\n    </>\n  );\n}\n"],"names":["LoginPage","_jsxs","_Fragment","children","_jsx","Helmet","JwtLoginView","RHFTextField","_ref","name","helperText","type","other","_objectWithoutProperties","_excluded","control","useFormContext","Controller","render","_ref2","field","error","fieldState","TextField","_objectSpread","fullWidth","value","onChange","event","Number","target","message","FormProvider","onSubmit","methods","Form","login","useAuthContext","router","useRouter","_useState","useState","_useState2","_slicedToArray","errorMsg","setErrorMsg","returnTo","useSearchParams","get","password","useBoolean","LoginSchema","Yup","shape","email","required","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","push","PATH_AFTER_LOGIN","t0","console","stop","_x","apply","arguments","renderHead","Stack","spacing","sx","mb","Typography","variant","direction","Link","component","RouterLink","href","paths","auth","jwt","register","renderForm","Alert","severity","label","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onToggle","edge","Iconify","icon","color","underline","alignSelf","LoadingButton","size","loading","JwtRegisterView","RegisterSchema","firstName","lastName","defaultValues","renderTerms","mt","typography","textAlign","xs","sm"],"sourceRoot":""}