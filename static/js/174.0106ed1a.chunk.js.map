{"version":3,"file":"static/js/174.0106ed1a.chunk.js","mappings":"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","sources":["sections/two/process/RequAna.js","sections/two/process/PlanDesig.js","sections/two/process/Develop.js","sections/two/process/Test.js","sections/two/process/Deploy.js","sections/two/process/Feed.js","sections/two/TimeLine.js","sections/two/AftPage.js","sections/two/view.js","pages/dashboard/two.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowCircleRightRounded } from '@mui/icons-material';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function RequAna() {\r\n  return (\r\n    <Paper elevation=\"5\" className=\"w-100 h-100 m-3\">\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"h4\" className=\"p-3\">\r\n          Requirement And Analytics:\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"p-3\">\r\n          {' '}\r\n          Review Uploaded File Here{' '}\r\n        </Typography>\r\n        <Stack spacing={2}>\r\n          <Item>\r\n            <a href=\"/pdfs/SRS.pdf\" target=\"_blank\">\r\n              <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />}>\r\n                GoTo Uploaded File\r\n              </Button>\r\n            </a>\r\n          </Item>\r\n        </Stack>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowCircleRightRounded } from '@mui/icons-material';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function PlanDesig() {\r\n  return (\r\n    <Paper elevation=\"5\" className=\"w-100 h-100 m-3\">\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"h4\" className=\"p-3\">\r\n          Planning And Designing:\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"p-3\">\r\n          {' '}\r\n          Review Uploaded File Here{' '}\r\n        </Typography>\r\n        <Stack spacing={2}>\r\n          <Item>\r\n            <a href=\"/pdfs/DesignPhases.pdf\" target=\"_blank\">\r\n              <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />}>\r\n                GoTo Uploaded File\r\n              </Button>\r\n            </a>\r\n          </Item>\r\n        </Stack>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowCircleRightRounded } from '@mui/icons-material';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Develop() {\r\n  return (\r\n    <Paper elevation=\"5\" className=\"w-100 h-100 m-3\">\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"h4\" className=\"p-3\">\r\n          Development:\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"p-3\">\r\n          {' '}\r\n          Review Uploaded File Here{' '}\r\n        </Typography>\r\n        <Stack spacing={2}>\r\n          <Item>\r\n            <a href=\"/pdfs/DevelopmentPhase.pdf\" target=\"_blank\">\r\n              <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />}>\r\n                GoTo Uploaded File\r\n              </Button>\r\n            </a>\r\n          </Item>\r\n        </Stack>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\n// import { Card } from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n// import Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\n// import TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowCircleRightRounded } from '@mui/icons-material';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Test() {\r\n  return (\r\n    <Paper elevation=\"5\" className=\"w-100 h-100 m-3\">\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"h4\" className=\"p-3\">\r\n          Testing:\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"p-3\">\r\n          {' '}\r\n          Review Uploaded File Here{' '}\r\n        </Typography>\r\n        <Stack spacing={2}>\r\n          <Item>\r\n            <a href=\"/pdfs/TestingPhasess.pdf\" target=\"_blank\">\r\n              <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />}>\r\n                GoTo Uploaded File\r\n              </Button>\r\n            </a>\r\n          </Item>\r\n        </Stack>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// {\r\n//     const [anchorEl, setAnchorEl] = React.useState(null);\r\n//     const [dummyText, setDummyText] = React.useState('');\r\n\r\n//     const handleButtonClick = (event) => {\r\n//         if (event.currentTarget.tagName === 'BUTTON') {\r\n//             setAnchorEl(event.currentTarget);\r\n//             setDummyText('Great sentences are the building blocks of great writing, but getting them just right is something that even professional writers regularly fuss over. There are many ways to muddy a sentence: complicated structure, misplaced modifiers, or confusing delivery. Two of the most common blunders involve incomplete or run-on sentences, which make writing difficult to understand. Luckily we have helpful resources to guide you toward writing crisper, cleaner, easy-to-read sentences so that your ideas don’t get lost in the shuffle.');\r\n//         } else {\r\n//             setAnchorEl(event.target);\r\n//         }\r\n//     };\r\n\r\n//     const handleClosePopover = () => {\r\n//         setAnchorEl(null);\r\n//     };\r\n\r\n//     const open = Boolean(anchorEl);\r\n//     const id = open ? 'popover' : undefined;\r\n\r\n//     const inputRef = React.useRef(null);\r\n\r\n//     const handleFileChange = (event) => {\r\n//         const file = event.target.files[0];\r\n//         setDummyText(file ? `Selected file: ${file.name}` : '');\r\n//         handleClosePopover(); // Close the popover after file selection\r\n//     };\r\n\r\n//     return (\r\n//         <Paper elevation='5' className='w-100 h-100 m-3'>\r\n//             <Box sx={{ width: '100%' }}>\r\n//                 <Typography variant='h4' className='p-3'>Testing :</Typography>\r\n//                 <Typography variant='h3' className='p-3'> Upload Your File Here </Typography>\r\n//                 <Stack spacing={2}>\r\n//                     <Item>\r\n//                         <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />} onClick={handleButtonClick}>\r\n//                             Review Uploaded File\r\n//                         </Button>\r\n//                         <Popover\r\n//                             id={id}\r\n//                             open={open}\r\n//                             anchorEl={anchorEl}\r\n//                             onClose={handleClosePopover}\r\n//                             anchorOrigin={{\r\n//                                 vertical: 'bottom',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                             transformOrigin={{\r\n//                                 vertical: 'top',\r\n//                                 horizontal: 'left',\r\n//                             }}\r\n//                         >\r\n//                             <Card className='d-flex flex-column justify-content-center w-auto h- m-3'>\r\n//                                 <div className='m-3 align-item-center h-auto w-auto'>\r\n//                                 <Typography>{dummyText}</Typography>\r\n//                                 </div>\r\n//                                 <div className='m-3 align-item-end w-auto h-auto'>\r\n//                                 <Button variant=\"outlined\">\r\n//                                             Export\r\n//                                         </Button>\r\n//                                 </div>\r\n//                             </Card>\r\n//                         </Popover>\r\n//                     </Item>\r\n//                     <Item>\r\n//                         <div>\r\n//                             <input ref={inputRef} type=\"file\" style={{ display: 'none' }} onChange={handleFileChange} />\r\n//                             <TextField\r\n//                                 label=\"Choose File\"\r\n//                                 variant=\"outlined\"\r\n//                                 className='w-100'\r\n//                                 InputProps={{\r\n//                                     readOnly: true,\r\n//                                     endAdornment: (\r\n//                                         <Button variant=\"outlined\" component=\"span\" onClick={() => inputRef.current.click()}>\r\n//                                             Browse\r\n//                                         </Button>\r\n//                                     ),\r\n//                                 }}\r\n//                             />\r\n//                         </div>\r\n//                     </Item>\r\n//                 </Stack>\r\n//             </Box>\r\n//         </Paper>\r\n//     );\r\n// }\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { styled } from '@mui/material/styles';\r\nimport { ArrowCircleRightRounded } from '@mui/icons-material';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Deploy() {\r\n  return (\r\n    <Paper elevation=\"5\" className=\"w-100 h-100 m-3\">\r\n      <Box sx={{ width: '100%' }}>\r\n        <Typography variant=\"h4\" className=\"p-3\">\r\n          Deployement:\r\n        </Typography>\r\n        <Typography variant=\"h3\" className=\"p-3\">\r\n          {' '}\r\n          Review Uploaded File Here{' '}\r\n        </Typography>\r\n        <Stack spacing={2}>\r\n          <Item>\r\n            <a href=\"/pdfs/DeploymentPhases.pdf\" target=\"_blank\">\r\n              <Button variant=\"outlined\" startIcon={<ArrowCircleRightRounded />}>\r\n                GoTo Uploaded File\r\n              </Button>\r\n            </a>\r\n          </Item>\r\n        </Stack>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport TextField  from '@mui/material/TextField';\r\nimport Button from'@mui/material/Button';\r\nimport { Typography } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nexport default function MultilineTextFields() {\r\n\r\n        const navigate = useNavigate();\r\n      \r\n        const handleClick = () => {\r\n          navigate('/'); // Assuming './sections/two/view' is the correct path to your destination component\r\n        };\r\n\r\n    return (\r\n            <div className='d-flex flex-column justify-content-start w-100 h-auto m-3 p-3 '>\r\n                <Typography variant='h4' className=' m-3 w-auto'>Feedback:</Typography>\r\n                <TextField\r\n                    id=\"Feedback\"\r\n                    label=\"Your Feedback:\"\r\n                    placeholder='Enter Message'\r\n                    multiline\r\n                    rows={4}\r\n                    className='w-auto'\r\n                />\r\n                <Button variant=\"contained\"className=' align-item-center' endIcon={<SendIcon />} onClick={handleClick}>\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n    );\r\n}\r\n","// TimeLineb.js\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Image from '../../assets/Image/_2b6b22ee-786e-42ec-9d7d-9bb39a9090cc.jfif';\r\nimport RequAna from './process/RequAna';\r\nimport PlanDesig from './process/PlanDesig';\r\nimport Develop from './process/Develop';\r\nimport Test from './process/Test';\r\nimport Deploy from './process/Deploy';\r\nimport Feed from './process/Feed';\r\n\r\nexport default function TimeLineb({ handleProcessComplete, handleProcessClose }) {\r\n  const [showRequAna, setShowRequAna] = useState(false);\r\n  const [showPlanDesig, setShowPlanDesig] = useState(false);\r\n  const [showDevelop, setShowDevelop] = useState(false);\r\n  const [showTest, setShowTest] = useState(false);\r\n  const [showDeploy, setShowDeploy] = useState(false);\r\n  const [showFeed, setShowFeed] = useState(false);\r\n\r\n  const toggleProcess = (process, setShowProcess) => {\r\n    setShowProcess(!process);\r\n    if (!process) {\r\n      handleProcessComplete(process);\r\n    } else {\r\n      handleProcessClose(process);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='d-flex flex-column w-auto h-auto justify-content-around'>\r\n      <div className='d-flex flex-row w-auto h-auto m-1'>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showRequAna, setShowRequAna)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent >\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\">Requirement Analysis </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showPlanDesig, setShowPlanDesig)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\"> Planing and Designing</Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showDevelop, setShowDevelop)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\"> Developing </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showTest, setShowTest)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\">Testing</Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showDeploy, setShowDeploy)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\">Deployment</Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n        <Card sx={{ maxWidth: 345 }} className='m-3 w-50 h-auto'>\r\n          <CardActionArea onClick={() => toggleProcess(showFeed, setShowFeed)}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={Image}\r\n              alt=\"green iguana\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" className='text-center' component=\"div\">Feedback and Maintenance     </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </div>\r\n      <div className='m-3 p-3 w-auto h-auto align-item-center'>\r\n        {showRequAna && <RequAna />}\r\n        {showPlanDesig && <PlanDesig />}\r\n        {showDevelop && <Develop />}\r\n        {showTest && <Test />}\r\n        {showDeploy && <Deploy />}\r\n        {showFeed && <Feed />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTimeLineb.propTypes = {\r\n  handleProcessComplete: PropTypes.func.isRequired,\r\n  handleProcessClose: PropTypes.func.isRequired\r\n};","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Alert from '@mui/material/Alert';\r\nimport TimeLineb from './TimeLine';\r\n\r\nconst steps = ['Requirement Analysis', 'Planning and Designing', 'Developing', 'Testing', 'Deployment', 'Feedback and Maintenance'];\r\n\r\nexport default function AftPage() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const [showAlert, setShowAlert] = React.useState(false);\r\n\r\n  const totalSteps = () => steps.length;\r\n  const completedSteps = () => Object.keys(completed).length;\r\n  const isLastStep = () => activeStep === totalSteps() - 1;\r\n  const allStepsCompleted = () => completedSteps() === totalSteps();\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n\r\n  const handleStep = step => () => setActiveStep(step);\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = { ...completed };\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n\r\n  const handleProcessComplete = step => {\r\n    const newCompleted = { ...completed };\r\n    newCompleted[step] = true;\r\n    setCompleted(newCompleted);\r\n  };\r\n\r\n  const handleProcessClose = step => {\r\n    const newCompleted = { ...completed };\r\n    delete newCompleted[step];\r\n    setCompleted(newCompleted);\r\n  };\r\n\r\n  const handleDownload = () => setShowAlert(true);\r\n  // const handleCloseAlert = () => setShowAlert(false);\r\n\r\n  return (\r\n    <>\r\n      {showAlert && (\r\n        <Alert\r\n          severity=\"success\"\r\n          sx={{ mt: 2, mb: 1 }}\r\n          onClose={() => setShowAlert(false)}\r\n        >\r\n          Your file is downloaded.\r\n        </Alert>\r\n      )}\r\n      <Box sx={{ width: '100%' }}>\r\n        <Stepper nonLinear activeStep={activeStep}>\r\n          {steps.map((label, index) => (\r\n            <Step key={label} completed={completed[index]}>\r\n              <StepButton color=\"inherit\" onClick={handleStep(index)}>\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <div>\r\n          {allStepsCompleted() ? (\r\n            <>\r\n              <Typography sx={{ mt: 2, mb: 1 }}>\r\n                All steps completed - you&apos;re finished\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                <Box sx={{ flex: '1 1 auto' }} />\r\n                <Button onClick={handleReset}>Reset</Button>\r\n                <Button onClick={handleDownload} sx={{ ml: 1 }}>Download</Button>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography sx={{ mt: 2, mb: 1, py: 1 }}>\r\n                Step {activeStep + 1}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Box sx={{ flex: '1 1 auto' }} />\r\n                <Button onClick={handleNext} sx={{ mr: 1 }}>\r\n                  Next\r\n                </Button>\r\n                {activeStep !== steps.length &&\r\n                  (completed[activeStep] ? (\r\n                    <Typography variant=\"caption\" sx={{ display: 'inline-block' }}>\r\n                      Step {activeStep + 1} already completed\r\n                    </Typography>\r\n                  ) : (\r\n                    <Button onClick={handleComplete}>\r\n                      {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                    </Button>\r\n                  ))}\r\n              </Box>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='w-auto h-auto'>\r\n          <TimeLineb\r\n            handleProcessComplete={handleProcessComplete}\r\n            handleProcessClose={handleProcessClose}\r\n          />\r\n        </div>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","// @mui\n// import { alpha } from '@mui/material/styles';\n// import Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\n// components\n// import { mock_types_data } from 'src/_mock/_types';\nimport { useSettingsContext } from 'src/components/settings';\nimport AftPage from './AftPage';\n// ----------------------------------------------------------------------\n\nexport default function TwoView() {\n  const settings = useSettingsContext();\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Process Page </Typography>\n      <AftPage/>\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport TwoView from 'src/sections/two/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Dashboard: Two</title>\n      </Helmet>\n\n      <TwoView />\n    </>\n  );\n}\n"],"names":["Item","styled","Paper","_ref","theme","_objectSpread","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","RequAna","_jsx","elevation","className","children","_jsxs","Box","sx","width","Typography","variant","Stack","href","target","Button","startIcon","ArrowCircleRightRounded","PlanDesig","Develop","Test","Deploy","MultilineTextFields","navigate","useNavigate","TextField","id","label","placeholder","multiline","rows","endIcon","SendIcon","onClick","TimeLineb","handleProcessComplete","handleProcessClose","_useState","useState","_useState2","_slicedToArray","showRequAna","setShowRequAna","_useState3","_useState4","showPlanDesig","setShowPlanDesig","_useState5","_useState6","showDevelop","setShowDevelop","_useState7","_useState8","showTest","setShowTest","_useState9","_useState10","showDeploy","setShowDeploy","_useState11","_useState12","showFeed","setShowFeed","toggleProcess","process","setShowProcess","Card","maxWidth","CardActionArea","CardMedia","component","height","image","Image","alt","CardContent","gutterBottom","Feed","steps","AftPage","_React$useState","React","_React$useState2","activeStep","setActiveStep","_React$useState3","_React$useState4","completed","setCompleted","_React$useState5","_React$useState6","showAlert","setShowAlert","totalSteps","length","completedSteps","Object","keys","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","_Fragment","Alert","severity","mt","mb","onClose","Stepper","nonLinear","map","index","Step","StepButton","display","flexDirection","pt","flex","ml","py","disabled","prevActiveStep","mr","newCompleted","TwoView","settings","useSettingsContext","Container","themeStretch","Page","Helmet"],"sourceRoot":""}